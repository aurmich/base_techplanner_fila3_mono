<?php
/**
 * @see https://github.com/filamentphp/filament/discussions/9237
 */

declare(strict_types=1);

namespace Modules\Media\Filament\Forms\Components;

use Filament\Forms;
use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\Repeater;
use Filament\Forms\Components\SpatieMediaLibraryFileUpload;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Get;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;
use Modules\Media\Models\Media;
use Spatie\MediaLibrary\HasMedia;
use Webmozart\Assert\Assert;

class GalleryField extends Repeater
{
    // protected string $view = 'ui::filament.forms.components.tree';

    protected function setUp(): void
    {
        $this->setUp03();
    }

    protected function setUp03(): void
    {
        parent::setUp();
        $this->schema(
            [
                // Forms\Components\TextInput::make('uuid'),
                /*
            Forms\Components\TextInput::make('zibibbo')->default(function ($component, $record, $state) {
                dddx([
                    'component' => $component,
                    'record' => $record,
                    'state' => $state,
                ]);
            }),
            */
                // FileUpload::make('img'),
                // SpatieMediaLibraryFileUpload::make('img')->image(),
                // FileUpload::make('file_name'),
                SpatieMediaLibraryFileUpload::make('image'),
                Forms\Components\TextInput::make('name'),
                Forms\Components\TextInput::make('collection_name'),
            ]
        );
    }

    protected function setUp02(): void
    {
        parent::setUp();
        $this->schema(
            [
                Repeater::make('grupo_fotos')
                    ->label('')
                    ->reorderable(false)
                    ->defaultItems(1)
                    ->addActionLabel('Adicionar novo grupo de fotos')
                    ->grid(2)
                    ->schema(
                        fn (): array => [
                            SpatieMediaLibraryFileUpload::make('fotos')
                                ->multiple()
                                ->image()
                                ->minFiles(1)
                                ->maxFiles(4)
                                ->helperText('Máximo de 4 imagens por grupo')
                                ->panelLayout(null)
                                ->previewable()
                                ->columns(2)
                                ->openable()
                                ->collection(
                                    /* @phpstan-ignore-line */
                                    fn (Get $get): string => 'grupo_'.$get('id_for_media')
                                ),
                            Forms\Components\Hidden::make('id_for_media')->default(Str::uuid()->toString()),
                            Forms\Components\TextInput::make('descricao')
                                ->label('Descrição')
                                ->required(),
                        ]
                    ),
            ]
        );
    }

    /*
    Forms\Components\FileUpload::make('image')
                            ->image()
                            ->visibleOn('edit')
                            ->getUploadedFileNameForStorageUsing(static function (TemporaryUploadedFile $file): string {
                                return Str::random(32);
                            })
                            ->saveUploadedFileUsing(static function (FileUpload $component, TemporaryUploadedFile $file, Narrator $record) {
                                $temporarilyFilename = $file->getFilename();
                                $basePath = 'narrators';
                                $tempUploadFolderName = config('livewire.temporary_file_upload.directory');
                                $extension = substr($temporarilyFilename, strrpos($temporarilyFilename, '.'));
                                $newFilename = $component->getUploadedFileNameForStorage($file).$extension;

                                Storage::move("$tempUploadFolderName/$temporarilyFilename", $basePath);
                                Storage::move("$basePath/$temporarilyFilename", $newFilename);
                                $file = ImageKitFacade::searchFile("$basePath/$newFilename");
                                */

    protected function setUp01(): void
    {
        parent::setUp();
        $this->schema(
            [
                SpatieMediaLibraryFileUpload::make('image')
                    ->disk('local')
                    ->collection('game-image')
                    ->visibility('private')
                    ->conversion('thumb')
                    ->loadStateFromRelationshipsUsing(
                        function (SpatieMediaLibraryFileUpload $component, HasMedia $record): void {
                            $callable = function ($file): array {
                                Assert::isInstanceOf($file, Media::class, '['.__LINE__.']['.class_basename($this).']');
                                $uuid = $file->uuid;

                                return [$uuid => $uuid];
                            };
                            /**
                             * @var Model&HasMedia $record
                             */
                            $files = $record/* ->load('media') */ ->getMedia('game-image')
                                ->where('id', $component->getState())
                                ->take(1)
                                ->mapWithKeys($callable)
                                ->toArray();

                            $component->state($files);
                        }
                    ),

                Textarea::make('key')->rows(3),

                Textarea::make('value')->rows(3),
            ]
        )->afterStateUpdated(
            function ($state, callable $set, callable $get, $component, ?HasMedia $record): void {
                // dddx(['state' => $state]);
                /*
                "state" => array:1 [▼
                "2e99de27-f6f9-4bec-a186-a5a2e8204977" => array:3 [▼
                "media_id" => []
                "key" => null
                "value" => null
                ]
                */
                // *
                // @see https://www.answeroverflow.com/m/1158821463168659496
                // $this->saveUploadedFileUsing(static function (SpatieMediaLibraryFileUpload $component, TemporaryUploadedFile $file, ?Model $record) {
                // $component->state($media->id);

                //  return $media->id;
                //
                // });
            }
        );
    }
}
